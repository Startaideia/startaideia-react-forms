(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{60:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return l})),i.d(t,"metadata",(function(){return u})),i.d(t,"rightToc",(function(){return r})),i.d(t,"default",(function(){return b}));var s=i(2),a=i(6),n=(i(0),i(75)),l={id:"rules",title:"Rules",sidebar_label:"Rules"},u={unversionedId:"rules",id:"rules",isDocsHomePage:!1,title:"Rules",description:"isRequired",source:"@site/docs/rules.md",permalink:"/startaideia-react-forms/docs/rules",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/rules.md",sidebar_label:"Rules",sidebar:"someSidebar",previous:{title:"Inputs",permalink:"/startaideia-react-forms/docs/inputs"}},r=[{value:"isRequired",id:"isrequired",children:[]},{value:"isEqual",id:"isequal",children:[]},{value:"isLength",id:"islength",children:[]},{value:"isEmail",id:"isemail",children:[]},{value:"isPhone",id:"isphone",children:[]},{value:"isCPF",id:"iscpf",children:[]},{value:"isCNPJ",id:"iscnpj",children:[]},{value:"isCPFCNPJ",id:"iscpfcnpj",children:[]}],c={rightToc:r};function b(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(n.b)("wrapper",Object(s.a)({},c,i,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"isrequired"},"isRequired"),Object(n.b)("p",null,"Indicates that a input is required"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),"<Input.Text isRequired>\n<Input.Text isRequired={true}> // Optional syntax\n<Input.Text isRequired={false}> // Optional for non-required fields\n")),Object(n.b)("h2",{id:"isequal"},"isEqual"),Object(n.b)("p",null,"Check if a field has a specific value"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),'<Input.Text isEqual="must_be_3"> // True when the input is "must_be_3"\n')),Object(n.b)("h2",{id:"islength"},"isLength"),Object(n.b)("p",null,"Check for the input length"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),"<Input.Text isLentgh={false}> // Disable the rule\n<Input.Text isLentgh={{ min: 6 }}> // Must be equal or gratter than 6 char\n<Input.Text isLentgh={{ max: 16 }}> // Must be qual or less than 6 char\n<Input.Text isLentgh={{ min: 6, max: 16 }}> // Must have between 6 and 16 chars, inclusive\n")),Object(n.b)("h2",{id:"isemail"},"isEmail"),Object(n.b)("p",null,"Check if the input is a valid email"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),"<Input.Text isEmail>\n<Input.Text isEmail={true}> // Optional syntax\n<Input.Text isEmail={false}> // Disable the rule\n")),Object(n.b)("h2",{id:"isphone"},"isPhone"),Object(n.b)("p",null,"Check if the input is phone"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),"// country: if must contains country code\n// phone: if is a house phone\n// mobile: if is a mobile phone\n// mask: if is a masked input\n<Input.Text isPhone={{ country: false, phone: true, mobile: true, mask: false }}>\n")),Object(n.b)("h2",{id:"iscpf"},"isCPF"),Object(n.b)("p",null,"Check if it is a valid CPF"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),"<Input.Text isCPF>\n<Input.Text isCPF={true}> // Optional syntax\n<Input.Text isCPF={false}> // Disable the rule\n")),Object(n.b)("h2",{id:"iscnpj"},"isCNPJ"),Object(n.b)("p",null,"Check if it is a valid CNPJ"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),"<Input.Text isisCNPJCPF>\n<Input.Text isCNPJ={true}> // Optional syntax\n<Input.Text isisCNPJCPF={false}> // Disable the rule\n")),Object(n.b)("h2",{id:"iscpfcnpj"},"isCPFCNPJ"),Object(n.b)("p",null,"Check if it is a valid CPF or CNPJ"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="Usage: "',title:'"Usage:','"':!0}),"<Input.Text isCPFCNPJ>\n<Input.Text isCPFCNPJ={true}> // Optional syntax\n<Input.Text isCisCPFCNPJPF={false}> // Disable the rule\n")))}b.isMDXComponent=!0}}]);